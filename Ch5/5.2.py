# 5.2===================================================================
# ----------------------------------------------------------------------
""""""
# 5.2.1=================================================================
# ----------------------------------------------------------------------
car = 'bmw' # 把'bmw'賦值給car
car == 'bmw' # 輸出True
# ----------------------------------------------------------------------
car = 'audi' # 把'audi'賦值給car
car == 'bmw' # 輸出False
# 5.2.2=================================================================
# ----------------------------------------------------------------------
car = 'Audi' # 把'Audi'賦值給car
car == 'audi' # 兩個大小寫不同的值會被當成不相等
# ----------------------------------------------------------------------
car = 'Audi'
car.lower() == 'audi' #先把變數值轉成小寫，再進行比較
# ----------------------------------------------------------------------
car = 'Audi'
car.lower() == 'audi'
print(car) # 函數lower沒有副作用，car仍然是字首大寫
# 5.2.3=================================================================
# ----------------------------------------------------------------------
requested_topping = 'mushrooms'

if requested_topping != 'anchovies': # 判斷requested_topping是否「不等於」'anchovies'
    print("Hold the anchovies!")
# 5.2.4=================================================================
# ----------------------------------------------------------------------
age = 18
age == 18
# ----------------------------------------------------------------------
answer = 17
if answer != 42: # 有些時候判斷兩數值是否不相等，會比判斷兩數值相等，效率更高
    print("That is not the correct answer. Please try again!")
# ----------------------------------------------------------------------
age = 19
age < 21 # 19 < 21 -> True
age <= 21 # 19 <= 21 -> True
age > 21 # 19 > 21 -> False
age >= 21 # 19 >= 21 -> False
# 5.2.5=================================================================
# ----------------------------------------------------------------------
age_0 = 22
age_1 = 18
age_0 >= 21 and age_1 >= 21 #用and檢查多個條件，age_1沒有滿足
age_1 = 22
age_0 >= 21 and age_1 >= 21 #用and檢查多個條件，兩個都滿足
# ----------------------------------------------------------------------
(age_0 >= 21) and (age_1 >= 21) #跟上面同一個意思，但是「更具可讀性」
# ----------------------------------------------------------------------
age_0 = 22
age_1 = 18
age_0 >= 21 or age_1 >= 21 # 用or檢查多個條件，至少age_0滿足了
age_0 = 18
age_0 >= 21 or age_1 >= 21 # 用or檢查多個條件，兩個都不滿足
# 5.2.6=================================================================
# ----------------------------------------------------------------------
requested_topping = ['mushrooms', 'onions', 'pineapple']
'mushrooms' in requested_topping # 檢查'mushrooms'是否在list裡面 -> True
'pepperoni' in requested_topping # 檢查'pepperoni'是否在list裡面 -> False
# 5.2.7=================================================================
# ----------------------------------------------------------------------
banned_users = ['andrew', 'carolina', 'david']
user = 'marie'

if user not in banned_users: # 檢查user裡面的字串是否「不在」list裡面
    print(user.title() + ", you can post a response if you wish.")
    # 因為user裡面的字串不存在於list裡面而滿足條件
# 5.2.8=================================================================
# ----------------------------------------------------------------------
game_active = True # 布林代數
can_edit = False # 布林代數












