# 6.2===================================================================
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5}
# 格式： {key:value, key:value, ...}

# ----------------------------------------------------------------------
alien_0 = {'color': 'green'}
# 只剩一個有關alien的訊息(顏色)
""""""
# 6.2.1=================================================================
# ----------------------------------------------------------------------
alien_0 = {'color': 'green'}
print(alien_0['color']) # 印出與color相對應的值
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5} # 包含兩組 key:value
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5} # 包含兩組 key:value

new_points = alien_0['points']
print("You just earned " + str(new_points) + " points!")
# ----------------------------------------------------------------------
# 6.2.2=================================================================
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5}
print(alien_0)

alien_0['x_position'] = 0  # 加入x座標 -> dictionary是動態結構
alien_0['y_position'] = 25 # 加入y座標 -> dictionary是動態結構
print(alien_0) # 印出來的會比上一個print還多
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 25}
alien_1 = {'color': 'green', 'x_position': 0, 'points': 5, 'y_position': 25}
print(alien_0 == alien_1) # 雖然順序不同，但是還是會回傳True，因為Python不關心key:value對
# 的添加顺序，而只看key:value之间的關聯關係。
# ----------------------------------------------------------------------
# 6.2.3=================================================================
# ----------------------------------------------------------------------
alien_0 = {} # 建立空的字典

alien_0['color'] = 'green'
alien_0['points'] = 5

print(alien_0)
# 6.2.4=================================================================
# ----------------------------------------------------------------------
alien_0 = {'color': 'green'}
print("The alien is " + alien_0['color'] + ".")

alien_0['color'] = 'yellow' # 可以直接修改裡面的value-> dictionary是動態結構
print("The alien is now " + alien_0['color'] + ".")
# ----------------------------------------------------------------------
alien_0 = {'x_position': 0, 'y_position': 25, 'speed': 'medium'}
print("Original x-position: " + str(alien_0['x_position']))

# 向右移動外星人
# 根據外星人目前的數度決定將其移動多遠
# alien_0['speed'] = 'fast' #透過修改速度的值改變外星人的增量
if alien_0['speed'] == 'slow':
    x_increment = 1
elif alien_0['speed'] == 'medium':
    x_increment = 2
else:
    # 這個外星人的速度一定很快
    x_increment = 3

# 新位置 = 老位置 + 增量
alien_0['x_position'] = alien_0['x_position'] + x_increment
print(("New x-position: " + str(alien_0['x_position'])))

# 6.2.5=================================================================
# ----------------------------------------------------------------------
alien_0 = {'color': 'green', 'points': 5}
print(alien_0)

del alien_0['points'] # 刪除 key:value 對
print(alien_0) # 比前一個print少一對(被刪除囉~)

# 6.2.6=================================================================
# ----------------------------------------------------------------------
# 前面的字典裏面是一個對象的多種資訊(外星人)，下面的是字典裏面有多個對象的同一種資訊
favorite_language = {
    'jen': 'python',
    'sarah': 'c',
    'edward': 'ruby',
    'phil': 'python', # 最後一個這邊也可以有「,」，為下一組做準備
    }
# ----------------------------------------------------------------------
favorite_language = {
    'jen': 'python',
    'sarah': 'c',
    'edward': 'ruby',
    'phil': 'python',
    }

print("Sarah's favorite language is " +
      favorite_language['sarah'].title() + # 給定被調查者的名字，這個字典可以回傳她愛的語言
      ".")









































